// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Opal.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RegisterUserRequest : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The avatar property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Avatar { get; set; }
#nullable restore
#else
        public string Avatar { get; set; }
#endif
        /// <summary>The remark property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Remark { get; set; }
#nullable restore
#else
        public string Remark { get; set; }
#endif
        /// <summary>The state property</summary>
        public global::Opal.Client.Models.ChatUserState? State { get; set; }
        /// <summary>The type property</summary>
        public global::Opal.Client.Models.ChatUserType? Type { get; set; }
        /// <summary>The userName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserName { get; set; }
#nullable restore
#else
        public string UserName { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Opal.Client.Models.RegisterUserRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Opal.Client.Models.RegisterUserRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Opal.Client.Models.RegisterUserRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "avatar", n => { Avatar = n.GetStringValue(); } },
                { "remark", n => { Remark = n.GetStringValue(); } },
                { "state", n => { State = n.GetEnumValue<global::Opal.Client.Models.ChatUserState>(); } },
                { "type", n => { Type = n.GetEnumValue<global::Opal.Client.Models.ChatUserType>(); } },
                { "userName", n => { UserName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("avatar", Avatar);
            writer.WriteStringValue("remark", Remark);
            writer.WriteEnumValue<global::Opal.Client.Models.ChatUserState>("state", State);
            writer.WriteEnumValue<global::Opal.Client.Models.ChatUserType>("type", Type);
            writer.WriteStringValue("userName", UserName);
        }
    }
}
#pragma warning restore CS0618
